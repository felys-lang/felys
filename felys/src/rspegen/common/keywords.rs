# ! [doc = "Generated by rspegen"] use std :: collections :: HashSet ; pub struct Keywords { keywords : HashSet < & 'static str > , } impl < const N : usize > From < [& 'static str ; N] > for Keywords { fn from (value : [& 'static str ; N]) -> Self { Self { keywords : HashSet :: from (value) } } } # [allow (unused)] impl Keywords { pub fn filter < 'a > (& self , s : & 'a str) -> Option < & 'a str > { if self . keywords . contains (s) { None } else { Some (s) } } }