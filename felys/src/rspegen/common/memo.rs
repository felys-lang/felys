# ! [doc = "Generated by rspegen"] use std :: collections :: HashMap ; use crate :: ast ::*; use std :: rc :: Rc ; # [allow (non_snake_case , unused)] # [derive (Default)] pub struct Memo { pub expr : HashMap < (usize , bool) , (usize , Option < Expr >) > , pub disjunction : HashMap < (usize , bool) , (usize , Option < Expr >) > , pub conjunction : HashMap < (usize , bool) , (usize , Option < Expr >) > , pub equality : HashMap < (usize , bool) , (usize , Option < Expr >) > , pub comparison : HashMap < (usize , bool) , (usize , Option < Expr >) > , pub term : HashMap < (usize , bool) , (usize , Option < Expr >) > , pub factor : HashMap < (usize , bool) , (usize , Option < Expr >) > , pub IDENT : HashMap < (usize , bool) , (usize , Option < usize >) > , }